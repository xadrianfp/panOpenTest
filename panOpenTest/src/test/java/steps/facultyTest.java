package steps;


import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import pages.DetailsPage;
import pages.LoginPage;
import cucumber.api.DataTable;
import cucumber.api.PendingException;
import cucumber.api.java.After;
import cucumber.api.java.en.And;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class facultyTest {
	  String baseUrl = "https://panopen.panopen.org/sign_in";
	  public String srtNombreClase = "CLASE NUMERO 4";
	  String strTxtUser;
	  String strTxtPass;
	  String testCase;
      public String mainPath = System.getProperty("user.dir") + "\\resources\\";
	  public String browser = "Firefox"; //"IE" � Chrome � Firefox
	  WebDriver driver = utilities.DriverFactory.open(mainPath, browser);
	  public LoginPage loginpage = new LoginPage(driver);
	  
    
	 
	@Given("^User logged in faculty page$")
	public void user_is_in_faculty_page() throws InterruptedException {
  	    
		System.out.println("Abre el navegador");
	    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.get(baseUrl);
		driver.manage().window().maximize();  //maximizo mi browser
		
		//Inicio el Login		 
		strTxtUser = "automation@panopen.com";
		strTxtPass = "123123123";

		System.out.println("Estamos en la página:" + loginpage.title());
		
		//Inicio el Login, escribe usuario, contraseña y clic en botón de logueo
		loginpage.login(strTxtUser, strTxtPass);
		Thread.sleep(2000);
		
		
	}

	@When("^User clicks create a class$")
	public void user_clicks_create_a_class() throws InterruptedException {
	    
		//Thread.sleep(1000);
		DetailsPage detailsPage = new DetailsPage(driver);
		System.out.println("Estamos en la página:" + detailsPage.title());
		detailsPage.newClass();
		//driver.findElement(By.linkText("Create New Class")).click();
	}

	@When("^users fills the form$")
	public void users_fills_the_form() throws InterruptedException {
		System.out.println("Ahora estamos en la pagina:" + driver.getTitle());
		
		
		driver.findElement(By.id("class-name")).sendKeys(srtNombreClase);
		driver.findElement(By.id("start-date")).sendKeys("11/07/2018");
		driver.findElement(By.id("end-date")).sendKeys("11/17/2018");
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Meeting Days'])[1]/following::span[1]")).click();
	    driver.findElement(By.id("start-time")).sendKeys("9:30 am");
	    driver.findElement(By.id("start-time")).sendKeys(Keys.ENTER);
	    driver.findElement(By.id("end-time")).sendKeys("11:30 am");
	    driver.findElement(By.id("end-time")).sendKeys(Keys.ENTER);
	    Thread.sleep(2000);
		
	}

	@Then("^class should be properly saved$")
	public void class_should_be_properly_saved() throws InterruptedException {
		
		driver.findElement(By.id("toc_options_toggle")).click();
		System.out.println("Ahora estamos en la pagina:" + driver.getTitle());
		
		WebElement element = driver.findElement(By.id("my-class-info"));
		String strng = element.getText();
		System.out.println(strng);
		Assert.assertEquals(srtNombreClase, strng);
		Thread.sleep(2000);
	}

	@When("^User clicks on an Active class link$")
	public void user_clicks_on_a_class_link_Active_class_for_testing() throws Throwable {
	    driver.findElement(By.linkText("Active Class for testing")).click();
	}

	@When("^He goes to book analytics tab$")
	public void he_goes_to_book_analytics_tab() throws InterruptedException {
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Class Analytics'])[1]/following::div[1]")).click();
	}

	@When("^He should set the due date for a specific assessment in the future and check it was properly saved$")
	public void he_should_set_the_due_date_for_a_specific_assessment() throws Throwable {
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Top Score'])[1]/following::input[1]")).click();
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='Set release date'])[1]/preceding::span[1]")).click();
	    driver.findElement(By.linkText("10")).click();
	    driver.findElement(By.xpath("(//button[@type='button'])[13]")).click();
	}

	@When("^User logs out$")
	public void user_logs_out() throws Throwable {
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='User Settings'])[1]/following::i[1]")).click();
	    driver.switchTo().alert().accept();
	}

	@When("^User logs in as a student$")
	public void user_logs_in_as_a_student() throws Throwable {
	    
		//Login		 
		strTxtUser = "automation+2@panopen.com";
		strTxtPass = "123123123";
			
		System.out.println("Estamos en la página:" + loginpage.title());
		
		//Inicio el Login, escribe usuario, contraseña y clic en botón de logueo
		loginpage.login(strTxtUser, strTxtPass);
		Thread.sleep(2000);
	}

	@When("^User takes the assessment$")
	public void user_takes_the_assessment() throws Throwable {
		System.out.println("Estamos leyendo el assessment:" + driver.getTitle());
		WebElement element = driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='?'])[2]/following::span[2]"));
		String strng = element.getText();
		System.out.println(strng);
		Assert.assertEquals("1 | INTRODUCTION TO BIOLOGY", strng);
		Thread.sleep(2000);
	}

	@Then("^Students score is recorded properly$")
	public void student_s_score_is_recorded_properly() throws Throwable {
		System.out.println("Finally logout");
	    driver.findElement(By.xpath("(.//*[normalize-space(text()) and normalize-space(.)='?'])[1]/following::i[1]")).click();
		
	}


	
	 @After
	 public void tearDown() throws Exception {
	    
		Thread.sleep(1000);	
		 driver.quit();
	
	  }

}

